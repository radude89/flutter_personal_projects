
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:flutter/foundation.dart';
import 'package:social_app/models/comment.dart';
import 'package:social_app/models/user.dart';
import 'package:social_app/services/database/database_service_users.dart';

import 'database_service.dart';

extension DatabaseServiceExtension on DatabaseService {
  Future<void> addCommentInFirebase(String postId, message) async {
    try {
      String uid = auth.currentUser!.uid;
      UserProfile? user = await getUserFromFirebase(uid);
      Comment newComment = Comment(
        id: '', // autogenerated by Firebase
        postId: postId,
        uid: uid,
        name: user!.name,
        username: user.username,
        message: message,
        timestamp: Timestamp.now(),
      );

      Map<String, dynamic> newCommentMap = newComment.toMap();

      await db.collection("Comments").add(newCommentMap);
    } catch (error) {
      if (kDebugMode) {
        print(error);
      }
    }
  }

  Future<void> deleteCommentInFirebase(String commentId) async {
   try {
     await db.collection("Comments").doc(commentId).delete();
   } catch (error) {
     if (kDebugMode) {
       print(error);
     }
   }
  }

  Future<List<Comment>> getCommentsFromFirebase(String postId) async {
    try {
      QuerySnapshot snapshot = await db
          .collection("Comments")
          .where("PostId", isEqualTo: postId)
          .get();
      return snapshot.docs.map((doc) => Comment.fromDocument(doc)).toList();
    } catch (error) {
      if (kDebugMode) {
        print(error);
      }
      return [];
    }
  }
}